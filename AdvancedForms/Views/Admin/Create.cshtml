@model AdvancedForms.ViewModels.AdvancedFormViewModel

<style asp-src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css" debug-src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css"></style>
@*<style asp-src="https://unpkg.com/formiojs@latest/dist/formio.full.min.css" debug-src="https://unpkg.com/formiojs@latest/dist/formio.full.min.css"></style>*@
@*<script asp-src="https://unpkg.com/formiojs@latest/dist/formio.full.min.js" debug-src="https://unpkg.com/formiojs@latest/dist/formio.full.min.js" at="Head" asp-name="formio.full.min"></script>*@

<style asp-src="/AdvancedForms/Styles/formio.full.min.css"></style>
<script asp-src="/AdvancedForms/Scripts/formio.full.min.js" at="Head" asp-name="formio.full.min"></script>
<script asp-src="https://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js" at="Head"></script>
<script asp-src="https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/js/bootstrap.min.js" at="Head"></script>

@{
    var standardComp = "{components:this.formioComponents}";
    var isEdit = !String.IsNullOrEmpty(Model.Id);
    var createOrEdit = isEdit ? "Edit" : "Create";
}

<script type='text/javascript' at="Head">

    window.onload = function () {
        let formioComponents;
        Formio.builder(document.getElementById('builder'),

                @if (String.IsNullOrEmpty(Model.Container))
                {
                   @standardComp
                }
                else
                {
                    @Html.Raw(Model.Container)
                }
            )
            .then(function (builder) {
                builder.on('saveComponent', function () {
                    document.getElementById('Container').value = JSON.stringify(builder.schema);
                    var formElement = document.getElementById('formio');
                    formElement.innerHTML = '';
                    var formJsonElement = document.getElementById('formJson');
                    formElement.innerHTML = '';
                    formJsonElement.innerHTML = '';
                    if (builder.form.components) {                       
                        Formio.createForm(formElement, builder.form).then();
                        formJsonElement.appendChild(document.createTextNode(JSON.stringify(builder.schema, null, 4)));
                    }
                });
            });
    };



</script>

<h1>@T["Advanced Form Module"]</h1>
<br />

<form enctype="multipart/form-data" asp-action="@createOrEdit" method="post" id="main"></form>

<div>
    <label asp-for="Title">@T["Title"]</label>
    <input asp-for="Title" class="form-control content-preview-text content-caption-text" autofocus="autofocus" form="main" />
    <span class="hint">@T["The title of the form."]</span>
    <br />
    <br />
</div>

<div>
    <label asp-for="Description">@T["Description"]</label>
    <textarea asp-for="Description" class="form-control content-preview-text content-caption-text" form="main"></textarea>
    <span class="hint">@T["The Description of the form."]</span>
    <br />
    <br />
</div>

<div>
    <label asp-for="Instructions">@T["Instructions"]</label>
    <textarea asp-for="Instructions" class="form-control content-preview-text content-caption-text" form="main"></textarea>
    <span class="hint">@T["The instructions for the form."]</span>
    <br />
    <br />
</div>

<ul class="nav nav-tabs">
    <li class="active"><a data-toggle="tab" href="#formBuilder">Form Builder</a></li>
    <li><a data-toggle="tab" href="#formPreview">Preview</a></li>
    <li><a data-toggle="tab" href="#formJsonTab">JSON</a></li>
</ul>

<div class="tab-content">
    <div id="formBuilder" class="tab-pane fade in active">
        <br />
        <div id='builder'></div>
    </div>
    <div id="formPreview" class="tab-pane fade">
        <br />
        <div id='formio'></div>
    </div>
    <div id="formJsonTab" class="tab-pane fade">
        <br />
        <div class="card card-body bg-light jsonviewer">
            <pre id="formJson"></pre>
        </div>        
    </div>
</div>

<input type="hidden" asp-for="Container" form="main" />

<br />
<br />

<button form="main" type="submit" name="submit.Publish" class="publish-button btn btn-success" value="submit.Publish">@T["Publish"]</button>

@if (isEdit)
{
    var returnUrl = Context.Request.Query["returnUrl"];
    <button form="main" type="submit" name="submit.Save" class="primaryAction btn btn-primary" value="submit.Save">@T["Save Draft"]</button>
    @if (!String.IsNullOrWhiteSpace(returnUrl) && Url.IsLocalUrl(returnUrl))
    {
        <a id="button-cancel" href="@returnUrl" class="btn btn-secondary">@T["Cancel"]</a>
    }
}
<input type="hidden" asp-for="Id" form="main" />
